# -*- coding: utf-8 -*-
'''
DC750 / LTC2221 Interface Example

This program demonstrates how to communicate with the LTC2261 demo board through Python.
Examples are provided for reading data captured by the ADC, or test data generated by
the ADC.

Board setup is described in Demo Manual 1369. Follow the procedure in this manual, and
verify operation with the PScope software. Once operation is verified, exit PScope
and run this script.

Tested with Python 2.7, Anaconda distribution available from Continuum Analytics,
http://www.continuum.io/

Demo board documentation:
http://www.linear.com/demo/1369
http://www.linear.com/product/LTC2261#demoboards

LTC2261 product page
http://www.linear.com/product/LTC2261


REVISION HISTORY
$Revision: 4276 $
$Date: 2015-10-20 10:38:41 -0700 (Tue, 20 Oct 2015) $

Copyright (c) 2015, Linear Technology Corp.(LTC)
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

The views and conclusions contained in the software and documentation are those
of the authors and should not be interpreted as representing official policies,
either expressed or implied, of Linear Technology Corp.
'''

import llt.common.dc890 as dc890
import llt.common.functions as funcs
import llt.common.constants as consts

def ltc2221_dc750(num_samples, verbose = False, do_plot = False, 
                      do_write_to_file = False):
    with Dc750(verbose) as controller:
        # You can call this multiple times with the same controller if you need to
        data = controller.collect(num_samples, consts.TRIGGER_NONE)
        
        if do_plot:
            funcs.plot(data)
        if do_write_to_file:
            funcs.write_to_file_32_bit(data, "data.txt")
        return data

class Dc750(dc890.Demoboard):
    """
        A DC890 demo board with settings for the DC750
    """
    def __init__(self, verbose = False):
        dc890.Demoboard.__init__(self, 
                                 dc_number             = 'DC750', 
                                 fpga_load             = 'LVDS',
                                 num_channels          = 1,
                                 is_positive_clock     = True, 
                                 num_bits              = 12,
                                 alignment             = 15,
                                 is_bipolar            = True,
                                 verbose               = verbose)

if __name__ == '__main__':
    NUM_SAMPLES = 64 * 1024
    # to use this function in your own code you would typically do
    # data = ltc2261_dc1369(num_samples)
    data = ltc2221_dc750(NUM_SAMPLES, verbose=True, do_plot=True)


