% DC2222A-B / LTC2508 Interface Example
%
% This program demonstrates how to communicate with the LTC2320-16 demo board
% using Matlab. Examples are provided for reading data captured by the ADC,
% or test data generated by the ADC.
%
% REVISION HISTORY
% $Revision: 5756 $
% $Date: 2017-09-16 12:58:34 -0700 (Fri, 16 Sep 2016) $
%
% Copyright (c) 2017, Linear Technology Corp.(LTC)
% All rights reserved.
%
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions are met:
%
% 1. Redistributions of source code must retain the above copyright notice,
%    this list of conditions and the following disclaimer.
% 2. Redistributions in binary form must reproduce the above copyright notice,
%    this list of conditions and the following disclaimer in the documentation
%    and/or other materials provided with the distribution.
%
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
% ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
% WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
% DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
% ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
% (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
% LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
% ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
% (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
% SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
%
% The views and conclusions contained in the software and documentation are those
% of the authors and should not be interpreted as representing official policies,
% either expressed or implied, of Linear Technology Corp.

function varargout = ltc2512_32_dc2222a_c(num_samples, df, verify, is_distributed_rd, ...
    is_filtered_data, is_verbose, do_plot, do_write_to_file)

import llt.demo_board_examples.ltc25xx.ltc2512.Ltc2512
do_demo = false;
if nargout == 0
    if ~exist('num_samples', 'var'); num_samples = 8 * 1024; end
    if ~exist('df', 'var'); df = 256; end
    if ~exist('verify', 'var'); verify = true; end
    % Note: Changing is_distributed_rd from false to true casus
    % one bad capture due to DC890 limitation.
    if ~exist('is_distributed_rd', 'var'); is_distributed_rd = true; end
    if ~exist('is_filtered_data', 'var'); is_filtered_data = true; end
    do_demo = true;
end
if ~exist('is_verbose', 'var'); is_verbose = do_demo; end
if ~exist('do_plot', 'var'); do_plot = do_demo; end
if ~exist('do_write_to_file', 'var'); do_write_to_file = do_demo; end

lcc = llt.common.LtcControllerComm();
controller = Ltc2512(lcc, df, verify, is_distributed_rd, is_filtered_data, is_verbose);

if is_filtered_data
    ch0 = controller.collect(num_samples, llt.common.LtcControllerComm.TRIGGER_NONE);
else
    data = ...
        controller.collect(num_samples, llt.common.LtcControllerComm.TRIGGER_NONE);
    ch0 = data{1};
    cm_data = data{2};
end

if do_plot
    llt.common.plot_channels(controller.get_num_bits(), ...
        ch0, is_verbose);
    if exist('cm_data', 'var')
        figure(3);
        plot(cm_data);
        title('Common Mode Time Domain Samples');
    end
end

if do_write_to_file
    llt.common.write_channels_to_file_32_bit('data.txt', ...
        ch0, false, is_verbose);
    if exist('cm_data', 'var')
        llt.common.write_channels_to_file_32_bit('cm_data.txt', ...
            cm_data, false, is_verbose);
    end
end

if nargout > 0
    varargout(1) = ch0;
end
if nargout > 1
    varargout(2) = cm_data;
end